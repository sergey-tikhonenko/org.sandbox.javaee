<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.sandbox.javaee</groupId>
	<artifactId>users</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>users application</name>

	<modules>
		<module>users-ejb</module>
		<module>users-web</module>
		<module>users-ear</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- credentials for wls:deploy if absent in $USER_HOME/m2/settings.xml-->
		<user>weblogic</user>
		<password>weblogic12</password>

		<!-- Weblogic 12 has jersey module of v1.9 -->
		<jersey.version>1.9</jersey.version>
		<!-- Weblogic 12 has slf4j of v1.6.1 module -->
		<slf4j.version>1.6.1</slf4j.version>
		<jackson.version>2.4.0</jackson.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat ourselves in every module -->
			<dependency>
				<groupId>org.sandbox.javaee</groupId>
				<artifactId>users-ejb</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>

			<!-- Define the version of the WAR so that we don't need to repeat ourselves in every module -->
			<dependency>
				<groupId>org.sandbox.javaee</groupId>
				<artifactId>users-web</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>war</type>
			</dependency>

			<!-- cdi-api, jpa-api, validation-api are used due to javaee-api hasn't javadoc -->
			<!-- Import the CDI API, we use provided scope as the API is included in JavaEE6 server -->
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<scope>provided</scope>
				<version>1.0</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<scope>provided</scope>
				<version>3.0.1</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<scope>provided</scope>
				<version>2.3.1</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<scope>provided</scope>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>c</artifactId>
				<version>1.1.2</version>
				<scope>provided</scope>
				<type>tld</type>
			</dependency>

			<!-- Import the JPA API, we use provided scope as the API is included in JavaEE server -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<scope>provided</scope>
				<version>1.0.0.Final</version>
			</dependency>

			<!-- JSR-303 (Bean Validation) Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss AS 7 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.1.0.Final</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Import the JAX-RS API, we use provided scope as the API is included in JavaEE6 server -->
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>jsr311-api</artifactId>
				<scope>provided</scope>
				<version>1.1.1</version>
			</dependency>
			<!-- Weblogic 12 has jersey module of v1.9 -->
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-core</artifactId>
				<version>${jersey.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.sun.jersey</groupId>
				<artifactId>jersey-json</artifactId>
				<version>${jersey.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- To use Jackson as JSON marshaling/unmarshaling provider-->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- Import the JSF API, we use provided scope as the API is included in JavaEE6 server -->
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<scope>provided</scope>
				<version>2.0</version>
			</dependency>

			<!-- Import the EJB 3.1 API, we use provided scope as the API is included in JavaEE server -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<scope>provided</scope>
				<version>6.0</version>
			</dependency>

            <!-- RichFaces BOM Import -->
            <dependency>
                <groupId>org.richfaces</groupId>
                <artifactId>richfaces-bom</artifactId>
                <version>4.3.2.Final</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

			<!-- Import the RichFaces core library -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.richfaces.core</groupId> -->
<!-- 				<artifactId>richfaces-core-impl</artifactId> -->
<!-- 				<version>4.3.1.Final</version> -->
<!-- 			</dependency> -->
			<!-- RichFaces Push dependencies -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.atmosphere</groupId> -->
<!-- 				<artifactId>atmosphere-runtime</artifactId> -->
<!-- 				<version>1.0.10</version> -->
<!-- 			</dependency> -->

			<!-- Import the RichFaces components -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.richfaces.ui</groupId> -->
<!-- 				<artifactId>richfaces-components-ui</artifactId> -->
<!-- 				<version>4.3.1.Final</version> -->
<!-- 			</dependency> -->

			<!-- Weblogic 12 has slf4j of v1.6.1 module -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<scope>provided</scope>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.10</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<!-- Enable usage of the wls goal prefix by default for the plug-in, e.g. mvn wls:deploy -->
				<plugin>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<goalPrefix>wls</goalPrefix>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
